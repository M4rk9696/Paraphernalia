#!/usr/bin/env node
const msg = process.argv[2];
const algo = process.argv[3] || 'A';

if (!msg) {
  console.log("No message given");
  console.log("Usage node main <Message> <option>");
  process.exit(1);
}

// console.log(`Given message is ${msg}`);

// Algorithm A is more efficient, though it's not readable
const constrict_A = (text) => {
  const textBuffer = Buffer.from(text);
  let unicode = "";
  for (const [i, byte] of textBuffer.entries()) {
    const hex = byte.toString("16");
    unicode += i & 1 ? `%uDC${hex}` : `%uD8${hex}`;
  }
  return unicode;
};

// Algorithm B's Unicode is more readable
const constrict_B = (text) => {
  const textBuffer = Buffer.from(text);
  let unicode = "";
  for (const [i, byte] of textBuffer.entries()) {
    const hex = byte.toString("16");
    unicode += i & 1 ? `${hex}` : `%u${hex}`;
  }
  return unicode;
};

if (algo == 'A') {
  const unicode = constrict_A(msg);
  console.log(
    `eval(unescape(escape(\`${unescape(unicode)}\`).replace(/u../g,'')))`
  );
} else if (algo == "B") {
  const unicode = constrict_B(msg);
  console.log(
    `eval(unescape(escape(\`${unescape(unicode)}\`).replace(/u(..)/g,'$1%')))`
  );
}
